---
title: "GIS_Part 3"
author: "B.Z."
date: "December 29, 2018"
output: html_document
---

```{r setup, include=FALSE}
library(spatstat)
library(sp)
library(rgeos)
library(maptools)
library(GISTools)
library(tmap)
library(sf)
library(geojsonio)
library(tmaptools)
library(raster)
library(fpc)
library(plyr)
library(OpenStreetMap)
library(rgdal)
library(tidyverse)
library(broom)
library(ggplot2)
```

## Including Plots

You can also embed plots, for example:

```{r pressure, echo=FALSE}

BoroughMapSF <- read_shape("BoundaryData/england_lad_2011.shp", as.sf = TRUE)
I_O_brough <- read.csv('Inner_Outer.csv')
names(I_O_brough) <- c("Code", "Inner_Outer")
BoroughMapSF <- merge(BoroughMapSF, I_O_brough, by.x = "code", by.y = "Code")
Pricedata <- read.csv('PriceData.csv')
Pricedata$Value <- as.numeric(Pricedata$Value)
names(Pricedata) <- c("Code", "Value")
LondonWards <- readOGR("London_Ward_CityMerged.shp", layer="London_Ward_CityMerged")
BoroughMap <- as(BoroughMapSF, "Spatial")
Wastepoint <- geojson_read("point.geojson", what = "sp")
```



```{r pressure, echo=FALSE}
tmap_mode('view')
summary(Wastepoint)
BNG = "+init=epsg:27700"
WGS = "+init=epsg:4326"
LondonWardsBNG <- spTransform(LondonWards,BNG)
BoroughMapBNG <- spTransform(BoroughMap,BNG)

WastepointBNG <- spTransform(Wastepoint, BNG)
tm_shape(BoroughMapBNG) +
  tm_polygons(col = NA, alpha = 1.0) +
  tm_shape(WastepointBNG) +
  tm_dots(col = "blue")
#Here we can find some points lay out the boundaries, thus we need clip the points to make all points are in boundary.
WastepointBNG <- WastepointBNG[BoroughMapBNG,]
summary(Wastepoint)
tm_shape(BoroughMapBNG) +
  tm_polygons(col = NA, alpha = 0.5) +
  tm_shape(WastepointBNG) +
  tm_dots(col = "blue")
```
Then we employed poly.counts funtion to count 

```{r pressure, echo=FALSE}
res <- poly.counts(WastepointBNG, BoroughMapBNG)
BoroughMapBNG@data$WastepointCount<-res
BoroughMapBNG@data$WasteDensity <- BoroughMapBNG$WastepointCount/poly.areas(BoroughMapBNG)
BoroughMapBNG@data
tm_shape(BoroughMapBNG) +
  tm_polygons("WasteDensity",
              style="jenks",
              palette="PuOr",
              midpoint=NA,
              title="Waste Point Density")
BroughBNGSF <- st_as_sf(BoroughMapBNG)
```

```{r pressure, echo=FALSE}
BroughOuter <- BroughBNGSF[which(BroughBNGSF$Inner_Outer =='Outer London'),]
BroughOuterSP <- as(BroughOuter,"Spatial")
BroughOuterSP <- spTransform(BroughOuterSP,BNG)
WastepointSub <- WastepointBNG[BroughOuterSP,]
LondonWards@data <- data.frame(LondonWards@data,Pricedata[match(LondonWards@data[,"GSS_CODE"],Pricedata[,"Code"]),])
WardsOUT <- LondonWardsBNG[BroughOuterSP,]
tm_shape(WardsOUT) +
  tm_polygons(col = NA, alpha = 0.5) +
  tm_shape(WastepointSub) +
  tm_dots(col = "blue")
res <- poly.counts(WastepointSub, WardsOUT)
WardsOUT@data$WastepointCount<-res
WardsOUT@data$WasteDensity <- WardsOUT$WastepointCount/poly.areas(WardsOUT)
tm_shape(WardsOUT) +
  tm_polygons("WasteDensity",
              style="jenks",
              palette="PuOr",
              midpoint=NA,
              title="Waste Point Density")
WardsOUTSF <- st_as_sf(WardsOUT)
```


```{r pressure, echo=FALSE}
newvar<-0
attach(WardsOUTSF)
newvar<-0
recode<-function(variable){
  newvar[variable>0]<-TRUE
  newvar[variable==0]<-FALSE
  return(newvar)
}
WardsOUTSF$WastepointCount_recode <- recode(WastepointCount)
WardsOUTSF$WastepointCount <- as.numeric(WardsOUTSF$WastepointCount)
tm_shape(WardsOUTSF) +
  tm_polygons("WastepointCount_recode")

WithWaste <- subset(WardsOUTSF, WastepointCount_recode > 0, select = c(NAME, Value,WastepointCount))
WithoutWaste<- subset(WardsOUTSF, WastepointCount_recode < 1, select = c(NAME, Value))
```
```{r pressure, echo=FALSE}

