Gi_LWard_Local_Density <- localG(LondonWardsBNG@data$WasteDensity, Lward.lw)
LondonWardsBNG@data$BLocGiRz <- Gi_LWard_Local_Density
LondonWardsBNG@data$BLocGiRz <- Gi_LWard_Local_Density
GIColours<- rev(brewer.pal(6, "RdBu"))
#now plot on an interactive map
tm_shape(LondonWardsBNG) +
tm_polygons("BLocGiRz",
style="fixed",
breaks=breaks1,
palette=GIColours,
midpoint=NA,
title="Gi*, Blue Plaques in London")
summary(LondonWardsBNG@data$BLocGiRz)
breaks2<-c(-1000,-1.17,-0.78,-0.27,0.083,0.58,1000)
#now plot on an interactive map
tm_shape(LondonWardsBNG) +
tm_polygons("BLocGiRz",
style="fixed",
breaks=breaks2,
palette=GIColours,
midpoint=NA,
title="Gi*, Blue Plaques in London")
breaks2<-c(-1000,-1.17,-0.78,-0.27,0.083,2,1000)
#now plot on an interactive map
tm_shape(LondonWardsBNG) +
tm_polygons("BLocGiRz",
style="fixed",
breaks=breaks2,
palette=GIColours,
midpoint=NA,
title="Gi*, Blue Plaques in London")
newvar<-0
LondonWardsSF <- st_as_sf(LondonWardsBNG)
attach(LondonWardsSF)
newvar<-0
recodecount<-function(variable){
newvar[variable>0]<-T
newvar[variable==0]<-F
return(newvar)
}
LondonWardsBNG$WastepointCount_recode <- recode(WastepointCount)
newvar<-0
LondonWardsSF <- st_as_sf(LondonWardsBNG)
attach(LondonWardsSF)
newvar<-0
recodecount<-function(variable){
newvar[variable>0]<-T
newvar[variable==0]<-F
return(newvar)
}
LondonWardsSF$WastepointCount_recode <- recodecount(WastepointCount)
tm_shape(LondonWardsBNG) +
tm_polygons("WastepointCount_recode",
style="cat",
palette="Reds",
midpoint=NA,
title="If ward having any wastepoint")
newvar<-0
LondonWardsSF <- st_as_sf(LondonWardsBNG)
attach(LondonWardsSF)
newvar<-0
recodecount<-function(variable){
newvar[variable>0]<-T
newvar[variable==0]<-F
return(newvar)
}
LondonWardsSF$WastepointCount_recode <- recodecount(WastepointCount)
tm_shape(LondonWardsSF) +
tm_polygons("WastepointCount_recode",
style="cat",
palette="Reds",
midpoint=NA,
title="If ward having any wastepoint")
newvar <- 0
recode<-function(variable,high,medium,low){
newvar[variable<=high]<-"High"
newvar[variable<=medium]<-"Medium"
newvar[variable<=low]<-"Low"
return(newvar)
}
attach(LondonWardsSF)
chisq$expected
newvar <- 0
recode<-function(variable,high,medium,low){
newvar[variable<=high]<-"High"
newvar[variable<=medium]<-"Medium"
newvar[variable<=low]<-"Low"
return(newvar)
}
attach(LondonWardsSF)
summary(LondonWardsSF$Unemployment.rate.2013)
LondonWardsSF$Unemployment2013recode <- recode(Unemployment.rate.2013,23.500,8.1,3.2)
chisq<-chisq.test(LondonWardsSF$Unemployment2013recode,LondonWardsSF$WastepointCount_recode)
chisq$observed
chisq$expected
chisq$p.value
chisq$expected
newvar <- 0
recode<-function(variable,high,medium,low){
newvar[variable<=high]<-"High"
newvar[variable<=medium]<-"Medium"
newvar[variable<=low]<-"Low"
return(newvar)
}
summary(LondonWardsSF$Unemployment.rate.2013)
LondonWardsSF$Unemployment2013recode <- recode(Unemployment.rate.2013,23.500,8.1,3.2)
chisq<-chisq.test(LondonWardsSF$Unemployment2013recode,LondonWardsSF$WastepointCount_recode)
chisq$observed
chisq$expected
chisq$p.value
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== T)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF)
LondonWardsDF <- st_set_geometry(LondonWardsSF,NULL)
WithWasteDF <- st_set_geometry(WithWaste,NULL)
cormat1 <- cor(LondonWardsDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat1)
cormat2 <- cor(WithWasteDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat2)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWasteDF, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWasteDF)
model1_res <- tidy(model1)
summary(model1)
plot(model1)
moran.test(WardsOUT$model1_res, Lward.lw)
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== T)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF)
LondonWardsDF <- st_set_geometry(LondonWardsSF,NULL)
WithWasteDF <- st_set_geometry(WithWaste,NULL)
cormat1 <- cor(LondonWardsDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat1)
cormat2 <- cor(WithWasteDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat2)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWasteDF, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWasteDF)
model1_res <- tidy(model1)
summary(model1)
plot(model1)
WardsOUT$model1_res <- model1$residuals
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== T)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF)
LondonWardsDF <- st_set_geometry(LondonWardsSF,NULL)
WithWasteDF <- st_set_geometry(WithWaste,NULL)
cormat1 <- cor(LondonWardsDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat1)
cormat2 <- cor(WithWasteDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat2)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWaste, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste)
model1_res <- tidy(model1)
summary(model1)
plot(model1)
WithWaste$model1_res <- model1$residuals
qtm(WithWaste, fill = "model_final_res")
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== T)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF)
LondonWardsDF <- st_set_geometry(LondonWardsSF,NULL)
WithWasteDF <- st_set_geometry(WithWaste,NULL)
cormat1 <- cor(LondonWardsDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat1)
cormat2 <- cor(WithWasteDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat2)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWaste, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste)
model1_res <- tidy(model1)
summary(model1)
plot(model1)
WithWaste$model1_res <- model1$residuals
qtm(WithWaste, fill = "model1_res")
varlist <- data.frame(cbind(lapply(LondonWardsSF, class)))
varlist$id <- seq(1,nrow(varlist))
View(varlist)
View(varlist)
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== T)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF)
LondonWardsDF <- st_set_geometry(LondonWardsSF,NULL)
WithWasteDF <- st_set_geometry(WithWaste,NULL)
varlist <- data.frame(cbind(lapply(LondonWardsSF, class)))
varlist$id <- seq(1,nrow(varlist))
cormat1 <- cor(LondonWardsDF[,c(142,115,105,100,85,140)], use="complete.obs", method="pearson")
corrplot(cormat1)
cormat2 <- cor(WithWasteDF[,c(142,115,105,100,85,140)], use="complete.obs", method="pearson")
corrplot(cormat2)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWaste, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste)
model1_res <- tidy(model1)
summary(model1)
plot(model1)
WithWaste$model1_res <- model1$residuals
qtm(WithWaste, fill = "model1_res")
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== T)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF)
LondonWardsDF <- st_set_geometry(LondonWardsSF,NULL)
WithWasteDF <- st_set_geometry(WithWaste,NULL)
varlist <- data.frame(cbind(lapply(LondonWardsSF, class)))
varlist$id <- seq(1,nrow(varlist))
cormat1 <- cor(LondonWardsDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat1)
cormat2 <- cor(WithWasteDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat2)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWaste, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste)
model1_res <- tidy(model1)
summary(model1)
plot(model1)
WithWaste$model1_res <- model1$residuals
qtm(WithWaste, fill = "model1_res")
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== T)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF)
LondonWardsDF <- st_set_geometry(LondonWardsSF,NULL)
WithWasteDF <- st_set_geometry(WithWaste,NULL)
varlist <- data.frame(cbind(lapply(LondonWardsSF, class)))
varlist$id <- seq(1,nrow(varlist))
cormat1 <- cor(LondonWardsDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat1)
cormat2 <- cor(WithWasteDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat2)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWaste, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste)
model1_res <- tidy(model1)
summary(model1)
model2 <- lm(Crime.rate...2013 ~ WasteDensity, data = WithWaste)
WithWaste$model2_res <- model1$residuals
summary(model2)
qtm(WithWaste, fill = "model1_res")
WithWaste$model1_res <- model1$residuals
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== T)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF)
LondonWardsDF <- st_set_geometry(LondonWardsSF,NULL)
WithWasteDF <- st_set_geometry(WithWaste,NULL)
varlist <- data.frame(cbind(lapply(LondonWardsSF, class)))
varlist$id <- seq(1,nrow(varlist))
cormat1 <- cor(LondonWardsDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat1)
cormat2 <- cor(WithWasteDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat2)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWaste, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste)
model1_res <- tidy(model1)
summary(model1)
model2 <- lm(Crime.rate...2013 ~ WasteDensity, data = WithWaste)
WithWaste$model1_res <- model1$residuals
WithWaste$model2_res <- model2$residuals
summary(model2)
qtm(WithWaste, fill = "model1_res")
qtm(WithWaste, fill = "model2_res")
summary(LondonWardsSF$Subjective.well.being.average.score..2013)
LondonWardsSF$Unemployment2013recode <- recode(Subjective.well.being.average.score..2013,8.4,7.8,7.5)
chisq<-chisq.test(LondonWardsSF$Unemployment2013recode,LondonWardsSF$WastepointCount_recode)
chisq$p.value
chisq$expected
chisq$observed
newvar<-0
LondonWardsSF <- st_as_sf(LondonWardsBNG)
attach(LondonWardsSF)
newvar<-0
recodecount<-function(variable){
newvar[variable>0]<-"WithWaste"
newvar[variable==0]<-"WithoutWaste"
return(newvar)
}
LondonWardsSF$WastepointCount_recode <- recodecount(WastepointCount)
tm_shape(LondonWardsSF) +
tm_polygons("WastepointCount_recode",
style="cat",
palette="Reds",
midpoint=NA,
title="If ward having any wastepoint")
summary(LondonWardsSF$Unemployment.rate.2013)
LondonWardsSF$Unemployment.rate.2013 <- recode(Unemployment.rate.2013,23.5,8.1,3.2)
chisq<-chisq.test(LondonWardsSF$Unemployment.rate.2013,LondonWardsSF$WastepointCount_recode)
chisq$observed
chisq$expected
chisq$observed
chisq$expected
chisq$observed
chisq$expected
chisq$observed
chisq$p.value
chisq$expected
chisq$observed
chisq$p.value
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== "WithWaste")
WithWasteDF <- st_set_geometry(WithWaste,NULL)
varlist <- data.frame(cbind(lapply(LondonWardsSF, class)))
varlist$id <- seq(1,nrow(varlist))
cormat2 <- cor(WithWasteDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== "WithWaste")
WithWasteDF <- st_set_geometry(WithWaste,NULL)
varlist <- data.frame(cbind(lapply(LondonWardsSF, class)))
varlist$id <- seq(1,nrow(varlist))
cormat2 <- cor(WithWasteDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
View(varlist)
varlist <- data.frame(cbind(lapply(WithWasteDF, class)))
varlist$id <- seq(1,nrow(varlist))
View(varlist)
LondonWardsSF$Unemployment.rate.2013 <- recode(Unemployment.rate.2013,23.5,8.1,3.2)
chisq<-chisq.test(LondonWardsSF$Unemployment.rate.2013,LondonWardsSF$WastepointCount_recode)
chisq$p.value
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== "WithWaste")
WithWasteDF <- st_set_geometry(WithWaste,NULL)
cormat2 <- cor(WithWasteDF[,c(142,120,105,100,85)], use="complete.obs", method="pearson")
WithWasteDF$Crime.rate...2013 <- as.numeric(WithWasteDF$Crime.rate...2013)
cormat2 <- cor(WithWasteDF[,c(142,120,105,100,85)], use="complete.obs", method="pearson")
WithWasteDF$Unemployment.rate.2013 <- as.numeric(WithWasteDF$Unemployment.rate.2013)
cormat2 <- cor(WithWasteDF[,c(142,120,105,100,85)], use="complete.obs", method="pearson")
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== "WithWaste")
WithWasteDF <- st_set_geometry(WithWaste,NULL)
varlist <- data.frame(cbind(lapply(WithWasteDF, class)))
varlist$id <- seq(1,nrow(varlist))
WithWasteDF$Unemployment.rate.2013 <- as.numeric(WithWasteDF$Unemployment.rate.2013)
cormat2 <- cor(WithWasteDF[,c(142,120,105,100,85)], use="complete.obs", method="pearson")
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== "WithWaste")
WithWasteDF <- st_set_geometry(WithWaste,NULL)
varlist <- data.frame(cbind(lapply(WithWasteDF, class)))
varlist$id <- seq(1,nrow(varlist))
WithWasteDF$Unemployment.rate.2013 <- as.numeric(WithWasteDF$Unemployment.rate.2013)
cormat2 <- cor(WithWasteDF[,c(142,120,105,85)], use="complete.obs", method="pearson")
corrplot(cormat2)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWaste, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste)
corrplot(cormat2)
WithWasteDF$Unemployment.rate.2013 <- as.numeric(WithWasteDF$Unemployment.rate.2013)
varlist <- data.frame(cbind(lapply(WithWasteDF, class)))
varlist$id <- seq(1,nrow(varlist))
cormat2 <- cor(WithWasteDF[,c(142,120,100,85)], use="complete.obs", method="pearson")
summary(LondonWardsSF$Unemployment.rate.2013)
BoroughMapSF <- read_shape("BoundaryData/england_lad_2011.shp", as.sf = TRUE)
I_O_brough <- read.csv('Inner_Outer.csv')
names(I_O_brough) <- c("Code", "Inner_Outer")
BoroughMapSF <- merge(BoroughMapSF, I_O_brough, by.x = "code", by.y = "Code")
LondonWards <- readOGR("WardsData/LondonWards.shp", layer="LondonWards")
BoroughMap <- as(BoroughMapSF, "Spatial")
Wastepoint <- geojson_read("point.geojson", what = "sp")
Wardsdata <- read.csv("Rawdata.csv")
LondonWardsSF <- st_as_sf(LondonWards)
LondonWardsSF <- merge(LondonWardsSF,Wardsdata, by.x="WD11CD", by.y="New.ward.code")
LondonWards <- as(LondonWardsSF,"Spatial")
tmap_mode('view')
summary(Wastepoint)
BNG = "+init=epsg:27700"
WGS = "+init=epsg:4326"
LondonWardsBNG <- spTransform(LondonWards,BNG)
BoroughMapBNG <- spTransform(BoroughMap,BNG)
WastepointBNG <- spTransform(Wastepoint, BNG)
tm_shape(BoroughMapBNG) +
tm_polygons(col = NA, alpha = 1.0) +
tm_shape(WastepointBNG) +
tm_dots(col = "blue")
#Here we can find some points lay out the boundaries, thus we need clip the points to make all points are in boundary.
WastepointBNG <- WastepointBNG[BoroughMapBNG,]
summary(Wastepoint)
tm_shape(BoroughMapBNG) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(WastepointBNG) +
tm_dots(col = "blue")
window <- as.owin(londonaggSP)
Londoninone <- BroughBNGSF
BoroughBNGSF <- st_as_sf(BoroughMapBNG)
Londoninone <- BroughBNGSF
Londoninone <- BoroughBNGSF
Londoninone$agg <- 1
Londonagg <- Londoninone %>% group_by(Londoninone$agg) %>% summarise()
londonaggSP <- as(Londonagg,"Spatial"
window <- as.owin(londonaggSP)
Londoninone <- BoroughBNGSF
Londoninone$agg <- 1
Londonagg <- Londoninone %>% group_by(Londoninone$agg) %>% summarise()
londonaggSP <- as(Londonagg,"Spatial")
window <- as.owin(londonaggSP)
plot(window)
Wastepoint.ppp <- ppp(x=WastepointBNG@coords[,1],y=WastepointBNG@coords[,2],window=window)
K <- Kest(Wastepoint.ppp, correction="border")
plot(K)
nni(WastepointBNG,win = "extent")
Wastepoints <- data.frame(WastepointBNG@coords[,1:2])
#now run the dbscan analysis
db <- fpc::dbscan(Wastepoints, eps = 1500, MinPts = 3)
#now plot the results
plot(db, Wastepoints, main = "DBSCAN Output", frame = F)
plot(londonaggSP, add=T)
db
Londoninone <- BoroughBNGSF
Londoninone$agg <- 1
Londonagg <- Londoninone %>% group_by(Londoninone$agg) %>% summarise()
londonaggSP <- as(Londonagg,"Spatial")
window <- as.owin(londonaggSP)
plot(window)
Wastepoint.ppp <- ppp(x=WastepointBNG@coords[,1],y=WastepointBNG@coords[,2],window=window)
K <- Kest(Wastepoint.ppp, correction="border")
plot(K)
nni(WastepointBNG,win = "extent")
Wastepoints <- data.frame(WastepointBNG@coords[,1:2])
#now run the dbscan analysis
db <- fpc::dbscan(Wastepoints, eps = 1500, MinPts = 3)
#now plot the results
plot(db, Wastepoints, main = "DBSCAN Output", frame = F)
plot(londonaggSP, add=T)
db
res <- poly.counts(WastepointBNG, LondonWardsBNG)
LondonWardsBNG@data$WastepointCount<-res
LondonWardsBNG@data$WasteDensity <- LondonWardsBNG$WastepointCount/poly.areas(LondonWardsBNG)*1000000
tm_shape(LondonWardsBNG) +
tm_polygons("WasteDensity",
style="cont",
palette="Oranges",
midpoint=NA,
title="Waste Point Density")
coordsW <- coordinates(LondonWardsBNG)
plot(LondonWardsBNG)
LB_nb <- poly2nb(LondonWardsBNG, queen=T)
#plot them
plot(LB_nb, coordinates(LondonWardsBNG), col="red")
#add a map underneath
plot(LondonWardsBNG, add=T)
Lward.lw <- nb2listw(LB_nb, style="C")
I_LWard_Global_Density <- moran.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
I_LWard_Global_Density
G_LWard_Global_Density <- globalG.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
G_LWard_Global_Density
I_LWard_Local <- localmoran(LondonWardsBNG@data$WastepointCount, Lward.lw)
I_LWard_Local_Density <- localmoran(LondonWardsBNG@data$WasteDensity, Lward.lw)
LondonWardsBNG@data$BLocI <- I_LWard_Local[,1]
LondonWardsBNG@data$BLocIz <- I_LWard_Local[,4]
LondonWardsBNG@data$BLocIR <- I_LWard_Local_Density[,1]
LondonWardsBNG@data$BLocIRz <- I_LWard_Local_Density[,4]
summary(LondonWardsBNG@data$BLocIRz)
MoranColours<- rev(brewer.pal(6, "RdGy"))
breaks1<-c(-1000,-1,-0.5,0,0.5,1,1000)
#now plot on an interactive map
tm_shape(LondonWardsBNG) +
tm_polygons("BLocIRz",
style="fixed",
breaks=breaks1,
palette=MoranColours,
midpoint=NA,
title="Local Moran's I, Waste point in London")
Gi_LWard_Local_Density <- localG(LondonWardsBNG@data$WasteDensity, Lward.lw)
LondonWardsBNG@data$BLocGiRz <- Gi_LWard_Local_Density
summary(LondonWardsBNG@data$BLocGiRz)
GIColours<- rev(brewer.pal(6, "RdBu"))
breaks2<-c(-1000,-1.17,-0.78,-0.27,0.083,2,1000)
#now plot on an interactive map
tm_shape(LondonWardsBNG) +
tm_polygons("BLocGiRz",
style="fixed",
breaks=breaks2,
palette=GIColours,
midpoint=NA,
title="Gi*, Blue Plaques in London")
newvar<-0
LondonWardsSF <- st_as_sf(LondonWardsBNG)
attach(LondonWardsSF)
newvar<-0
recodecount<-function(variable){
newvar[variable>0]<-"WithWaste"
newvar[variable==0]<-"WithoutWaste"
return(newvar)
}
LondonWardsSF$WastepointCount_recode <- recodecount(WastepointCount)
tm_shape(LondonWardsSF) +
tm_polygons("WastepointCount_recode",
style="cat",
palette="Reds",
midpoint=NA,
title="If ward having any wastepoint")
newvar <- 0
recode<-function(variable,high,medium,low){
newvar[variable<=high]<-"High"
newvar[variable<=medium]<-"Medium"
newvar[variable<=low]<-"Low"
return(newvar)
}
summary(LondonWardsSF$Unemployment.rate.2013)
LondonWardsSF$Unemployment.rate.2013_recode <- recode(Unemployment.rate.2013,23.5,8.1,3.2)
chisq<-chisq.test(LondonWardsSF$Unemployment.rate.2013_recode,LondonWardsSF$WastepointCount_recode)
chisq$observed
chisq$expected
chisq$p.value
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== "WithWaste")
WithWasteDF <- st_set_geometry(WithWaste,NULL)
varlist <- data.frame(cbind(lapply(WithWasteDF, class)))
varlist$id <- seq(1,nrow(varlist))
WithWasteDF$Unemployment.rate.2013 <- as.numeric(WithWasteDF$Unemployment.rate.2013)
cormat2 <- cor(WithWasteDF[,c(142,120,100,85)], use="complete.obs", method="pearson")
corrplot(cormat2)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWaste, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste)
model1_res <- tidy(model1)
summary(model1)
model2 <- lm(Crime.rate...2013 ~ WasteDensity, data = WithWaste)
WithWaste$model1_res <- model1$residuals
WithWaste$model2_res <- model2$residuals
summary(model2)
qtm(WithWaste, fill = "model1_res")
qtm(WithWaste, fill = "model2_res")
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== "WithWaste")
WithWasteDF <- st_set_geometry(WithWaste,NULL)
varlist <- data.frame(cbind(lapply(WithWasteDF, class)))
varlist$id <- seq(1,nrow(varlist))
WithWasteDF$Unemployment.rate.2013 <- as.numeric(WithWasteDF$Unemployment.rate.2013)
cormat2 <- cor(WithWasteDF[,c(142,115,100,85)], use="complete.obs", method="pearson")
corrplot(cormat2)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWaste, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste)
model1_res <- tidy(model1)
summary(model1)
model2 <- lm(Crime.rate...2013 ~ WasteDensity, data = WithWaste)
WithWaste$model1_res <- model1$residuals
WithWaste$model2_res <- model2$residuals
summary(model2)
qtm(WithWaste, fill = "model1_res")
qtm(WithWaste, fill = "model2_res")
