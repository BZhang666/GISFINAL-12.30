LondonWards <- readOGR("WardsData/LondonWards.shp", layer="LondonWards")
BoroughMap <- as(BoroughMapSF, "Spatial")
Wastepoint <- geojson_read("point.geojson", what = "sp")
Wardsdata <- read.csv("Rawdata.csv")
LondonWardsSF <- st_as_sf(LondonWards)
LondonWardsSF <- merge(LondonWardsSF,Wardsdata, by.x="WD11CD", by.y="New.ward.code")
LondonWards <- as(LondonWardsSF,"Spatial")
tmap_mode('view')
summary(Wastepoint)
BNG = "+init=epsg:27700"
WGS = "+init=epsg:4326"
LondonWardsBNG <- spTransform(LondonWards,BNG)
BoroughMapBNG <- spTransform(BoroughMap,BNG)
WastepointBNG <- spTransform(Wastepoint, BNG)
tm_shape(BoroughMapBNG) +
tm_polygons(col = NA, alpha = 1.0) +
tm_shape(WastepointBNG) +
tm_dots(col = "blue")
#Here we can find some points lay out the boundaries, thus we need clip the points to make all points are in boundary.
WastepointBNG <- WastepointBNG[BoroughMapBNG,]
summary(Wastepoint)
tm_shape(BoroughMapBNG) +
tm_polygons(col = NA, alpha = 0.5) +
tm_shape(WastepointBNG) +
tm_dots(col = "blue")
res <- poly.counts(WastepointBNG, BoroughMapBNG)
BoroughMapBNG@data$WastepointCount<-res
BoroughMapBNG@data$WasteDensity <- BoroughMapBNG$WastepointCount/poly.areas(BoroughMapBNG)
BoroughMapBNG@data
tm_shape(BoroughMapBNG) +
tm_polygons("WasteDensity",
style="jenks",
palette="PuOr",
midpoint=NA,
title="Waste Point Density")
BroughBNGSF <- st_as_sf(BoroughMapBNG)
res <- poly.counts(WastepointBNG, LondonWardsBNG)
LondonWardsBNG@data$WastepointCount<-res
LondonWardsBNG@data$WasteDensity <- LondonWardsBNG$WastepointCount/poly.areas(LondonWardsBNG)*1000000
tm_shape(LondonWardsBNG) +
tm_polygons("WasteDensity",
style="cont",
palette="Oranges",
midpoint=NA,
title="Waste Point Density")
window <- as.owin(LondonWardsBNG)
plot(window)
Wastepoint.ppp <- ppp(x=WastepointBNG@coords[,1],y=WastepointBNG@coords[,2],window=window)
K <- Kest(Wastepoint.ppp, correction="border",rmax=2000)
plot(K)
coordsW <- coordinates(LondonWardsBNG)
plot(LondonWardsBNG)
LB_nb <- poly2nb(LondonWardsBNG, queen=T)
#plot them
plot(LB_nb, coordinates(LondonWardsBNG), col="red")
#add a map underneath
plot(LondonWardsBNG, add=T)
Lward.lw <- nb2listw(LB_nb, style="C")
I_LWard_Global_Density <- moran.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
I_LWard_Global_Density
G_LWard_Global_Density <- globalG.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
G_LWard_Global_Density
newvar<-0
LondonWardsSF <- st_as_sf(LondonWardsBNG)
attach(LondonWardsSF)
newvar<-0
recode<-function(variable){
newvar[variable>0]<-T
newvar[variable==0]<-F
return(newvar)
}
LondonWardsBNG$WastepointCount_recode <- recode(WastepointCount)
tm_shape(LondonWardsBNG) +
tm_polygons("WastepointCount_recode")
newvar<-0
LondonWardsSF <- st_as_sf(LondonWardsBNG)
attach(LondonWardsSF)
newvar<-0
recode<-function(variable){
newvar[variable>0]<-T
newvar[variable==0]<-F
return(newvar)
}
LondonWardsBNG$WastepointCount_recode <- recode(WastepointCount)
tm_shape(LondonWardsBNG) +
tm_polygons("WastepointCount_recode",
style="cat",
palette="Oranges",
midpoint=NA,
title="Waste Point Density")
newvar<-0
LondonWardsSF <- st_as_sf(LondonWardsBNG)
attach(LondonWardsSF)
newvar<-0
recode<-function(variable){
newvar[variable>0]<-T
newvar[variable==0]<-F
return(newvar)
}
LondonWardsBNG$WastepointCount_recode <- recode(WastepointCount)
tm_shape(LondonWardsBNG) +
tm_polygons("WastepointCount_recode",
style="cat",
palette="Oranges",
midpoint=NA,
title="if the ward having any wastepoint")
tm_shape(LondonWardsBNG) +
tm_polygons("WastepointCount_recode",
style="cat",
palette="Blues",
midpoint=NA,
title="if the ward having any wastepoint")
tm_shape(LondonWardsBNG) +
tm_polygons("WastepointCount_recode",
style="cat",
palette="Reds",
midpoint=NA,
title="if the ward having any wastepoint")
tm_shape(LondonWardsBNG) +
tm_polygons("WastepointCount_recode",
style="cat",
palette="Reds",
midpoint=NA,
title="If ward having any wastepoint")
newvar<-0
LondonWardsSF <- st_as_sf(LondonWardsBNG)
attach(LondonWardsSF)
newvar<-0
recodecount<-function(variable){
newvar[variable>0]<-T
newvar[variable==0]<-F
return(newvar)
}
LondonWardsBNG$WastepointCount_recode <- recode(WastepointCount)
tm_shape(LondonWardsBNG) +
tm_polygons("WastepointCount_recode",
style="cat",
palette="Reds",
midpoint=NA,
title="If ward having any wastepoint")
View(LondonWardsSF)
coordsW <- coordinates(LondonWardsBNG)
plot(LondonWardsBNG)
LB_nb <- poly2nb(LondonWardsBNG, queen=T)
#plot them
plot(LB_nb, coordinates(LondonWardsBNG), col="red")
#add a map underneath
plot(LondonWardsBNG, add=T)
Lward.lw <- nb2listw(LB_nb, style="C")
I_LWard_Global_Density <- moran.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
I_LWard_Global_Density
G_LWard_Global_Density <- globalG.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
G_LWard_Global_Density
I_LWard_Local <- localmoran(LondonWardsBNG@data$WasteDensity, Lward.lw)
I_LWard_Local_Density <- localmoran(LondonWards@data$WastepointCount, Lward.lw)
res <- poly.counts(WastepointBNG, LondonWardsBNG)
LondonWardsBNG@data$WastepointCount<-res
LondonWardsBNG@data$WasteDensity <- LondonWardsBNG$WastepointCount/poly.areas(LondonWardsBNG)*1000000
tm_shape(LondonWardsBNG) +
tm_polygons("WasteDensity",
style="cont",
palette="Oranges",
midpoint=NA,
title="Waste Point Density")
window <- as.owin(LondonWardsBNG)
plot(window)
Wastepoint.ppp <- ppp(x=WastepointBNG@coords[,1],y=WastepointBNG@coords[,2],window=window)
K <- Kest(Wastepoint.ppp, correction="border",rmax=2000)
plot(K)
coordsW <- coordinates(LondonWardsBNG)
plot(LondonWardsBNG)
LB_nb <- poly2nb(LondonWardsBNG, queen=T)
#plot them
plot(LB_nb, coordinates(LondonWardsBNG), col="red")
#add a map underneath
plot(LondonWardsBNG, add=T)
Lward.lw <- nb2listw(LB_nb, style="C")
I_LWard_Global_Density <- moran.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
I_LWard_Global_Density
G_LWard_Global_Density <- globalG.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
G_LWard_Global_Density
I_LWard_Local <- localmoran(LondonWardsBNG@data$WasteDensity, Lward.lw)
I_LWard_Local_Density <- localmoran(LondonWards@data$WastepointCount, Lward.lw)
coordsW <- coordinates(LondonWardsBNG)
plot(LondonWardsBNG)
LB_nb <- poly2nb(LondonWardsBNG, queen=T)
#plot them
plot(LB_nb, coordinates(LondonWardsBNG), col="red")
#add a map underneath
plot(LondonWardsBNG, add=T)
Lward.lw <- nb2listw(LB_nb, style="C")
I_LWard_Global_Density <- moran.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
I_LWard_Global_Density
G_LWard_Global_Density <- globalG.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
G_LWard_Global_Density
I_LWard_Local <- localmoran(LondonWardsBNG@data$WastepointCount, Lward.lw)
I_LWard_Local_Density <- localmoran(LondonWards@data$WasteDensity, Lward.lw)
coordsW <- coordinates(LondonWardsBNG)
plot(LondonWardsBNG)
LB_nb <- poly2nb(LondonWardsBNG, queen=T)
#plot them
plot(LB_nb, coordinates(LondonWardsBNG), col="red")
#add a map underneath
plot(LondonWardsBNG, add=T)
Lward.lw <- nb2listw(LB_nb, style="C")
I_LWard_Global_Density <- moran.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
I_LWard_Global_Density
G_LWard_Global_Density <- globalG.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
G_LWard_Global_Density
I_LWard_Local <- localmoran(LondonWardsBNG@data$WastepointCount, Lward.lw)
I_LWard_Local_Density <- localmoran(LondonWardsBNG@data$WasteDensity, Lward.lw)
coordsW <- coordinates(LondonWardsBNG)
plot(LondonWardsBNG)
LB_nb <- poly2nb(LondonWardsBNG, queen=T)
#plot them
plot(LB_nb, coordinates(LondonWardsBNG), col="red")
#add a map underneath
plot(LondonWardsBNG, add=T)
Lward.lw <- nb2listw(LB_nb, style="C")
I_LWard_Global_Density <- moran.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
I_LWard_Global_Density
G_LWard_Global_Density <- globalG.test(LondonWardsBNG@data$WasteDensity, Lward.lw)
G_LWard_Global_Density
I_LWard_Local <- localmoran(LondonWardsBNG@data$WastepointCount, Lward.lw)
I_LWard_Local_Density <- localmoran(LondonWardsBNG@data$WasteDensity, Lward.lw)
LondonWardsBNG@data$BLocI <- I_LWard_Local[,1]
LondonWardsBNG@data$BLocIz <- I_LWard_Local[,4]
LondonWardsBNG@data$BLocIR <- I_LWard_Local_Density[,1]
LondonWardsBNG@data$BLocIRz <- I_LWard_Local_Density[,4]
View(I_LWard_Local)
MoranColours<- rev(brewer.pal(8, "RdGy"))
#now plot on an interactive map
tm_shape(LondonWards) +
tm_polygons("BLocIRz",
style="fixed",
palette=MoranColours,
midpoint=NA,
title="Local Moran's I, Blue Plaques in London")
#now plot on an interactive map
tm_shape(LondonWardsBNG) +
tm_polygons("BLocIRz",
style="fixed",
palette=MoranColours,
midpoint=NA,
title="Local Moran's I, Blue Plaques in London")
breaks1<-c(-1000,-2.58,-1.96,-1.65,1.65,1.96,2.58,1000)
#now plot on an interactive map
tm_shape(LondonWardsBNG) +
tm_polygons("BLocIRz",
style="fixed",
palette=MoranColours,
midpoint=NA,
title="Local Moran's I, Blue Plaques in London")
#now plot on an interactive map
tm_shape(LondonWardsBNG) +
tm_polygons("BLocIRz",
style="fixed",
breaks=breaks1,
palette=MoranColours,
midpoint=NA,
title="Local Moran's I, Blue Plaques in London")
View(LondonWardsSF)
LondonWardsSF$Unemployment.rate.2013
summary(LondonWardsSF$Unemployment.rate.2013)
LondonWardsSF$Unemployment2013recode <- recode(Unemployment.rate.2013,23.500,8.1,3.2)
attach(LondonWardsSF)
summary(LondonWardsSF$Unemployment.rate.2013)
LondonWardsSF$Unemployment2013recode <- recode(Unemployment.rate.2013,23.500,8.1,3.2)
recode<-function(variable,high,medium,low){
newvar[variable<=high]<-"High"
newvar[variable<=medium]<-"Medium"
newvar[variable<=low]<-"Low"
return(newvar)
recode<-function(variable,high,medium,low){
newvar[variable<=high]<-"High"
newvar[variable<=medium]<-"Medium"
newvar[variable<=low]<-"Low"
return(newvar)
}
recode<-function(variable,high,medium,low){
newvar[variable<=high]<-"High"
newvar[variable<=medium]<-"Medium"
newvar[variable<=low]<-"Low"
return(newvar)
}
recode<-function(variable,high,medium,low){
newvar[variable<=high]<-"High"
newvar[variable<=medium]<-"Medium"
newvar[variable<=low]<-"Low"
return(newvar)
}
attach(LondonWardsSF)
summary(LondonWardsSF$Unemployment.rate.2013)
LondonWardsSF$Unemployment2013recode <- recode(Unemployment.rate.2013,23.500,8.1,3.2)
chisq<-chisq.test(WardsInner$WastepointCount_recode,WardsOUT$WastepointCount_recode)
newvar <- 0
recode<-function(variable,high,medium,low){
newvar[variable<=high]<-"High"
newvar[variable<=medium]<-"Medium"
newvar[variable<=low]<-"Low"
return(newvar)
}
attach(LondonWardsSF)
summary(LondonWardsSF$Unemployment.rate.2013)
LondonWardsSF$Unemployment2013recode <- recode(Unemployment.rate.2013,23.500,8.1,3.2)
chisq<-chisq.test(WardsInner$WastepointCount_recode,WardsOUT$WastepointCount_recode)
chisq<-chisq.test(LondonWardsSF$Unemployment2013recode,LondonWardsSF$WastepointCount_recode)
chisq$observed
chisq$p.value
chisq$observed
chisq$p.value
chisq$expected
chisq$observed
chisq$expected
chisq$observed
chisq$p.value
chisq
newvar <- 0
recode<-function(variable,high,medium,low){
newvar[variable<=high]<-"High"
newvar[variable<=medium]<-"Medium"
newvar[variable<=low]<-"Low"
return(newvar)
}
attach(LondonWardsSF)
summary(LondonWardsSF$Unemployment.rate.2013)
LondonWardsSF$Unemployment2013recode <- recode(Unemployment.rate.2013,23.500,8.1,3.2)
chisq<-chisq.test(LondonWardsSF$Unemployment2013recode,LondonWardsSF$WastepointCount_recode)
chisq$observed
chisq$expected
chisq$p.value
qplot(Unemployment.rate.2013, WasteDensity, data = LondonWardsSF, geom = "point")
qplot(WasteDensity,Unemployment.rate.2013 , data = LondonWardsSF, geom = "point")
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== T, select = c(NAME, Unemployment.rate.2013,WasteDensity))
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== T, select = c(WD11NM, Unemployment.rate.2013,WasteDensity))
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWaste, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste)
model1_res <- tidy(model1)
summary(model1)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF)
model1_res <- tidy(model1)
summary(model1)
plot(model1)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste)
model1_res <- tidy(model1)
summary(model1)
plot(model1)
library(corrplot)
LondonWardsDF <- st_set_geometry(LondonWardsSF,NULL)
varlist <- data.frame(cbind(lapply(LondonWardsSF, class)))
varlist$id <- seq(1,nrow(varlist))
View(varlist)
cormat <- cor(LondonWardsDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat)
WithWaste <- subset(LondonWardsSF, WastepointCount_recode== T,)
WithWasteDF <- st_set_geometry(WithWaste,NULL)
cormat <- cor(LondonWardsDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat)
cormat <- cor(WithWaste[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
varlist <- data.frame(cbind(lapply(WithWasteDF, class)))
varlist$id <- seq(1,nrow(varlist))
View(varlist)
cormat <- cor(WithWaste[,c(142,105,100,85)], use="complete.obs", method="pearson")
cormat <- cor(WithWasteDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF)
model1_res <- tidy(model1)
summary(model1)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF)
model1_res <- tidy(model1)
summary(model1)
moran.test(LondonWardsSF@data$model1_resids, Lward.lw)
LondonWardsSF$model_final_res <- model_final$residuals
LondonWardsSF$model_final_res <- model1$residuals
moran.test(LondonWardsSF@data$model1_resids, Lward.lw)
qtm(LondonWardsSF, fill = "model_final_res")
moran.test(LondonWardsSF$model_final_res, Lward.lw)
GWRbandwidth <- gwr.sel(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF,coords=cbind(x,y),adapt=T)
library("spgwr", lib.loc="~/Library/R/3.5/library")
GWRbandwidth <- gwr.sel(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF,coords=cbind(x,y),adapt=T)
gwr.model = gwr(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF,coords=cbind(x,y), adapt=GWRbandwidth, hatmatrix=TRUE, se.fit=TRUE)
gwr.model
LondonWardsSF$coefUnauthAbse<-results$Unemployment.rate.2013
results<-as.data.frame(gwr.model$SDF)
LondonWardsSF$coefUnauthAbse<-results$Unemployment.rate.2013
tm_shape(LondonWards) +
tm_polygons(col = "coefUnauthAbse", palette = "RdBu")
tm_shape(LondonWardsSF) +
tm_polygons(col = "coefUnauthAbse", palette = "RdBu")
View(LondonWardsSF)
LondonWardsSF$coefUnauthAbse<-results$Unemployment.rate.2013
tm_shape(LondonWardsSF) +
tm_polygons(col = "coefUnauthAbse", palette = "RdBu")
LondonWardsSF$coefUnauthAbse<-results$Unemployment.rate.2013
varlist <- data.frame(cbind(lapply(LondonWardsSF, class)))
varlist$id <- seq(1,nrow(varlist))
View(results)
LondonWardsSF$coefUnauthAbse<-results$WasteDensity
tm_shape(LondonWardsSF) +
tm_polygons(col = "coefUnauthAbse", palette = "RdBu")
GWRbandwidth <- gwr.sel(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste,coords=cbind(x,y),adapt=T)
gwr.model = gwr(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste,coords=cbind(x,y), adapt=GWRbandwidth, hatmatrix=TRUE, se.fit=TRUE)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste)
model1_res <- tidy(model1)
summary(model1)
moran.test(WithWaste$model_final_res, Lward.lw)
WithWaste$model_final_res <- model1$residuals
moran.test(WithWaste$model_final_res, Lward.lw)
moran.test(LondonWardsSF$model_final_res, Lward.lw)
LondonWardsSF$model_final_res <- model1$residuals
qtm(LondonWardsSF, fill = "model_final_res")
qtm(LondonWardsSF, fill = "model_final_res")
GWRbandwidth <- gwr.sel(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste,coords=cbind(x,y),adapt=T)
moran.test(LondonWardsSF$model_final_res, Lward.lw)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF)
model1_res <- tidy(model1)
summary(model1)
LondonWardsSF$model_final_res <- model1$residuals
moran.test(LondonWardsSF$model_final_res, Lward.lw)
GWRbandwidth <- gwr.sel(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF,coords=cbind(x,y),adapt=T)
gwr.model = gwr(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF,coords=cbind(x,y), adapt=GWRbandwidth, hatmatrix=TRUE, se.fit=TRUE)
gwr.model = gwr(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF,coords=cbind(x,y), adapt=GWRbandwidth, hatmatrix=TRUE, se.fit=TRUE)
gwr.model
results<-as.data.frame(gwr.model$SDF)
LondonWardsSF$coefUnauthAbse<-results$WasteDensity
tm_shape(LondonWardsSF) +
tm_polygons(col = "coefUnauthAbse", palette = "RdBu")
cormat <- cor(WithWasteDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat)
#now plot on an interactive map
tm_shape(LondonWardsBNG) +
tm_polygons("BLocIRz",
style="fixed",
breaks=breaks1,
palette=MoranColours,
midpoint=NA,
title="Local Moran's I, Blue Plaques in London")
cormat1 <- cor(LondonWardsDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat1)
cormat2 <- cor(WithWasteDF[,c(142,115,105,100,85)], use="complete.obs", method="pearson")
corrplot(cormat2)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWaste, geom = "point")
model1_res <- tidy(model1)
summary(model1)
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWaste)
model1_res <- tidy(model1)
summary(model1)
moran.test(LondonWardsSF$model_final_res, Lward.lw)
LondonWardsSF$model_final_res <- model1$residuals
LondonWardsSF$model1_res <- model1$residuals
WithWaste$model1_res <- model1$residuals
qtm(WithWaste, fill = "model_final_res")
moran.test(WithWaste$model1, Lward.lw)
coordsW <- coordinates(WithWaste)
WithWasteSP <- as(WithWaste,"Spatial")
coordsW <- coordinates(WithWasteSP)
plot(WithWasteSP)
LB_nb <- poly2nb(WithWasteSP, queen=T)
Lward.lw <- nb2listw(LB_nb, style="C")
LB_nb <- poly2nb(WithWasteSP, queen=T)
Lward.lw <- nb2listw(LB_nb, style="C")
plot(LB_nb, coordinates(WithWasteSP), col="red")
plot(WithWasteSP)
plot(WithWasteSP, add=T)
plot(LB_nb, coordinates(WithWasteSP), col="red")
plot(WithWasteSP, add=T)
Lward.lw <- nb2listw(LB_nb, style="C")
BroughOuterSF <- BroughBNGSF[which(BroughBNGSF$Inner_Outer =='Outer London'),]
BroughOuterSP <- as(BroughOuterSF,"Spatial")
BroughOuterSP <- spTransform(BroughOuterSP,BNG)
WardsOUT <- LondonWardsSF[BroughOuterSP,]
BroughOuterSF <- BroughBNGSF[which(BroughBNGSF$Inner_Outer =='Outer London'),]
WardsOUT <- LondonWardsSF[BroughOuterSF,]
WardsOUTSP <- as(WardsOUT,"Spatial")
coordsW <- coordinates(WardsOUTSP)
plot(WardsOUTSP)
LB_nb <- poly2nb(WardsOUTSP, queen=T)
plot(LB_nb, coordinates(WardsOUTSP), col="red")
plot(WardsOUTSP, add=T)
Lward.lw <- nb2listw(LB_nb, style="C")
qplot(WasteDensity,Unemployment.rate.2013 , data = WardsOUT, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WardsOUT)
model1_res <- tidy(model1)
summary(model1)
WardsOUT$model1_res <- model1$residuals
moran.test(WardsOUT$model1_res, Lward.lw)
qtm(WithWaste, fill = "model_final_res")
qtm(model1_res, fill = "model_final_res")
qtm(WardsOUT, fill = "model_final_res")
GWRbandwidth <- gwr.sel(Unemployment.rate.2013 ~ WasteDensity, data = WardsOUT,coords=cbind(x,y),adapt=T)
WardsOUTSP <- as(WardsOUT,"Spatial")
coordsW <- coordinates(WardsOUTSP)
plot(WardsOUTSP)
LB_nb <- poly2nb(WardsOUTSP, queen=T)
plot(LB_nb, coordinates(WardsOUTSP), col="red")
plot(WardsOUTSP, add=T)
Lward.lw <- nb2listw(LB_nb, style="C")
qplot(WasteDensity,Unemployment.rate.2013 , data = WardsOUT, geom = "point")
qtm(WardsOUT, fill = "model_final_res")
GWRbandwidth <- gwr.sel(Unemployment.rate.2013 ~ WasteDensity, data = WardsOUT,coords=cbind(x,y),adapt=T)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWaste, geom = "point")
GWRbandwidth <- gwr.sel(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF,coords=cbind(x,y),adapt=T)
gwr.model = gwr(Unemployment.rate.2013 ~ WasteDensity, data = LondonWardsSF,coords=cbind(x,y), adapt=GWRbandwidth, hatmatrix=TRUE, se.fit=TRUE)
gwr.model
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WardsOUT)
model1_res <- tidy(model1)
summary(model1)
qplot(WasteDensity,Unemployment.rate.2013 , data = WithWasteDF, geom = "point")
model1 <- lm(Unemployment.rate.2013 ~ WasteDensity, data = WithWasteDF)
model1_res <- tidy(model1)
summary(model1)
plot(model1)
